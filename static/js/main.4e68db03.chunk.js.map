{"version":3,"sources":["components/projects.tsx","components/HomePage/ResumeCardContainer.tsx","components/HomePage/Avatar.tsx","components/HomePage/Section.tsx","serviceWorker.js","index.js","App.tsx","text.js"],"names":["Project","title","body","status","Text","size","className","ResumeCardContainer","boxes","colorList","length","shuffled_colors","_","shuffle","Row","xs","md","lg","Col","Box","pad","round","background","Avatar","props","src","alt","style","width","Section","children","Boolean","window","location","hostname","match","ReactDOM","render","href","height","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0NAGaA,EAAkF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OAE5G,OACE,oCACE,kBAACC,EAAA,EAAD,CAAMC,KAAK,QAAQC,UAAU,aAC1BL,GAEH,kBAACG,EAAA,EAAD,CAAMC,KAAK,SAASC,UAAU,YAC3BJ,GAEH,kBAACE,EAAA,EAAD,CAAMC,KAAK,QAAQC,UAAU,cAA7B,mBACmBH,K,iDCTZI,EAA+D,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEpEC,GAD0BD,EAAME,OACpB,CAAC,UAAW,UAAU,UAAW,UAAW,YAc1DC,EAAmBC,IAAEC,QAAQJ,GAQjC,OAAQ,oCACJ,yBAAKH,UAAU,QACX,kBAACQ,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACnB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACKC,IAAI,QACJC,MAAM,QACNC,WAAYX,EAAgB,IAChCH,EAAM,KAGV,kBAACU,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CACKC,IAAI,QACJC,MAAM,QACNC,WAAYX,EAAgB,IAChCH,EAAM,MAId,kBAACM,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACpB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACKC,IAAI,QACJC,MAAM,QACNC,WAAYX,EAAgB,IAChCH,EAAM,KAGV,kBAACU,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CACKC,IAAI,QACJC,MAAM,QACNC,WAAYX,EAAgB,IAChCH,EAAM,SC9Dde,EAAkC,SAACC,GAC5C,OAAQ,oCAAE,yBAAKC,IAAI,aAAaC,IAAI,GAAGC,MAAO,CAACC,MAAO,aCA7CC,EAAmC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC9C,OAAO,yBAAKxB,UAAU,WAClB,yBAAKA,UAAU,kBACTwB,KCOMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCGD,WACb,OACE,6BACM,yBAAK/B,UAAU,gBACb,uBAAGA,UAAU,cAAcgC,KAAK,KAC9B,yBAAKb,IAAI,aAAaC,IAAI,4BAA4Ba,OAAO,SAGjE,yBAAKjC,UAAU,uBACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,SAAd,oCAGA,wBAAIA,UAAU,aAAd,0DAEA,yBAAKA,UAAU,UACb,kBAAC,EAAD,SAIN,kBAAC,EAAD,KACE,yBAAKA,UAAU,sBAAf,iCAGA,kBAAC,EAAD,CAAqBE,MAAO,CAC1B,kBAAC,EAAD,CAASP,MCjCO,kBDkCPC,KCnCM,0UDoCNC,OAAQ,6CAEjB,kBAAC,EAAD,CAASF,MClCA,aDmCAC,KClCD,kMDmCCC,OAAQ,+BAEjB,kBAAC,EAAD,CAASF,MCxCS,oBDyCTC,KCxCQ,0VDyCRC,OAAQ,6CAEjB,kBAAC,EAAD,CAASF,MCxCO,2BDyCPC,KCxCM,2LDyCNC,OAAQ,8CD1Cf,MAASqC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4e68db03.chunk.js","sourcesContent":["import React from \"react\";\nimport {Text} from 'grommet'\n\nexport const Project: React.FunctionComponent<{title: string, body: string, status: string}> = ({title, body, status}) => {\n\n  return (\n    <>\n      <Text size=\"large\" className=\"box-title\">\n        {title} \n      </Text>\n      <Text size=\"medium\" className=\"box-body\">\n        {body} \n      </Text>\n      <Text size=\"small\" className=\"box-footer\">\n        Project status: {status} \n      </Text>\n    </>\n  );\n}\n","import React from 'react'\nimport {Box } from 'grommet'\nimport _ from 'lodash'\nimport { Row, Col, Container } from 'react-bootstrap'\n\nexport const ResumeCardContainer: React.FunctionComponent<{boxes: any[]}> = ({boxes}) => {\n    const boxSizing: number = 100 / boxes.length\n    const colorList = ['#845ec2', '#d65db1','#ff9671', '#ffc75f', '#f9f871' ]\n    const dynamicPopulation = (list: any[]) => {\n        let retList: any[] = []\n        let shuffled_colors =  _.shuffle(colorList)\n        list.forEach((element, ind) => {\n            retList.push({value: boxSizing, color: shuffled_colors[ind], box: boxes[ind]})\n        });\n        list.map((val, ind) => {\n            let box = boxes[ind]\n            val = {...val, box: box}\n            return val\n        })\n        return retList\n    }\n    let shuffled_colors =  _.shuffle(colorList)\n    let gridAreas = [\n                {name: 'gridTop', start: [0,0], end: [0,0]},\n                {name: 'gridRight', start: [1,0], end: [1,0]},\n                {name: 'gridLeft', start: [1,1], end: [1,1]},\n                {name: 'gridBottom', start: [0,1], end: [0,1]}\n            ]\n\n    return (<>\n        <div className=\"grid\">\n            <Row xs={1} md={2} lg={2}>\n                <Col>\n                    <Box \n                         pad=\"large\" \n                         round=\"large\" \n                         background={shuffled_colors[0]}>\n                    {boxes[0]}\n                    </Box>\n                </Col>\n                 <Col>\n                    <Box  \n                         pad=\"large\" \n                         round=\"large\" \n                         background={shuffled_colors[1]}>\n                    {boxes[1]}\n                    </Box>\n                </Col>\n            </Row>\n             <Row xs={1} md={2} lg={2}>\n                <Col>\n                    <Box \n                         pad=\"large\" \n                         round=\"large\" \n                         background={shuffled_colors[2]}>\n                    {boxes[2]}\n                    </Box>\n                </Col>\n                 <Col>\n                    <Box  \n                         pad=\"large\" \n                         round=\"large\" \n                         background={shuffled_colors[3]}>\n                    {boxes[3]}\n                    </Box>\n                </Col>\n            </Row>\n        </div>\n        </>\n     )\n}\n\n","import React from 'react'\nexport const Avatar: React.FunctionComponent = (props) => {\n    return( <><img src=\"Avatar.svg\" alt=\"\" style={{width: \"210px\"}}/></>)\n}\n\n","import React from 'react'\n\nexport const Section: React.FunctionComponent = ({children}) => {\n    return <div className=\"Section\">\n        <div className=\"SectionWrapper\">\n             {children}\n        </div>\n       \n    </div>\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, {  } from 'react';\nimport { Header  } from './components/HomePage/Header'\nimport { Project } from './components/projects';\nimport { legalDocketTitle, legalDocketBody, keyvTitle, uicSchoolPageBody, androidNoteBody, uicSchoolPageTitle, keyvBody, androidNoteTitle } from './text';\nimport { ResumeCardContainer } from './components/HomePage/ResumeCardContainer';\nimport { Container } from 'react-bootstrap'\nimport { Box } from 'grommet';\nimport { Avatar } from './components/HomePage/Avatar';\nimport { Section } from './components/HomePage/Section';\nexport default function App() {\n  return (\n    <div>\n          <div className=\"navbar-brand\">\n            <a className=\"navbar-item\" href='/'>\n              <img src=\"MyLogo.png\" alt=\"Paul Morgan III | Web Dev\" height=\"48\"/>\n            </a>\n          </div>\n          <div className=\"columns is-centered\">\n            <div className=\"column\">\n              <h1 className=\"title\">\n                Developer, student, and hobbyist\n              </h1>\n              <h2 className=\"subheader\">I program solutions to problems, and I love what I do.</h2>\n              \n              <div className=\"avatar\">\n                <Avatar/>\n              </div> \n            </div> \n          </div>\n          <Section>\n            <div className=\"SectionHeader-Blue\">\n              Some projects I've worked on.\n            </div>\n            <ResumeCardContainer boxes={[ \n              <Project title={legalDocketTitle} \n                       body={legalDocketBody} \n                       status={\"Offline. Can show source code on request\"}\n              />, \n              <Project title={keyvTitle} \n                       body={keyvBody} \n                       status={\"Over 200 downloads on npm!\"}\n              />, \n              <Project title={uicSchoolPageTitle} \n                       body={uicSchoolPageBody} \n                       status={\"Offline. Can show source code on request\"}\n              />, \n              <Project title={androidNoteTitle} \n                       body={androidNoteBody} \n                       status={\"App code is available on my github\"}\n              /> \n            ]}> \n      </ResumeCardContainer>\n      </Section> \n    </div>\n  ); \n} ","export var legalDocketBody = 'Lead a team consisting of 2 other people and myself in the ongoing development of a website to assist members of The Justice Center to store and access clients legal information with ease. The website was made using Ruby on Rails and Postgresql for the backend and Bootstrap for the front end. It was hosted using DigitalOcean.'\nexport var legalDocketTitle = 'LegalDocket.org'\nexport var uicSchoolPageTitle = 'UICSchoolPage.com'\nexport var uicSchoolPageBody = 'Created a forum website for UIC students to chat and discuss school related topics. I made this in response to learning that the Facebook page students used to discuss topics was going to be taken down. This website uses Ruby on Rails and Postgresql for the backend and a front end framework called Materialize CSS. It was hosted using heroku.'\nexport var keyvTitle = 'Keyv-mssql'\nexport var keyvBody = 'Created an adapter for the popular node package Keyv. The adapter allows for mapping of key-value pairs to a Microsoft SQL Server Database instance. It currently has over 200 downloads on NPM'\nexport var androidNoteTitle = \"Android practice notepad\";\nexport var androidNoteBody = \"A toy notepad app I made for Android in order to teach myself the basics of android development. I used it as my go-to note taking app for about a year before switching to google keep.\""],"sourceRoot":""}